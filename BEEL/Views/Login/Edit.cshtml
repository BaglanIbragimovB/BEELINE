@model BEEL.Models.Identity.User

@{
    ViewBag.Title = "Edit";
}

<h2>Редактировать пользователя</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChangeDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ChangeDate)                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user_list, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.user_list, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.user_list, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_list, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.user_edit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.user_edit, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.user_edit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_edit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.user_delete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.user_delete, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.user_delete, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user_delete, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.prod_list, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.prod_list, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.prod_list, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prod_list, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.prod_edit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.prod_edit, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.prod_edit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prod_edit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.prod_delete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.prod_delete, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.CheckBoxFor(m => m.prod_delete, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prod_delete, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("Index")">
        <i class="btn btn-primary btn-large">
            <span class="glyphicon glyphicon-backward"> Назад</span>
        </i>
    </a>
</div>
